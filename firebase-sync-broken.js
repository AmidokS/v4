// ========== FIREBASE –°–ò–ù–•–†–û–ù–ò–ó–ê–¶–ò–Ø ==========

class FirebaseSync {
  constructor() {
    this.isInitialized = false;
    this.isOnline = navigator.onLine;
    this.syncQueue = [];
    this.lastSyncTime = localStorage.getItem('lastSyncTime') || 0;
    
    // –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Firebase (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –í–ê–®–£)
    this.firebaseConfig = {
      apiKey: "AIzaSyGdsK93LaWhRGo6PoesvlNAg3jPmntXsQAu",
      authDomain: "budget-ami.firebaseapp.com",
      databaseURL: "https://budget-ami-default-rtdb.europe-west1.firebasedatabase.app",
      projectId: "budget-ami",
      storageBucket: "budget-ami.firebasestorage.app",
      messagingSenderId: "976854941281",
      appId: "1:976854941281:web:f40e81033cf52d236af420"
    };
    
    this.init();
  }

  async init() {
    // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ Firebase SDK
    let attempts = 0;
    while (typeof firebase === 'undefined' && attempts < 10) {
      console.log('‚è≥ –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫—É Firebase SDK... –ü–æ–ø—ã—Ç–∫–∞:', attempts + 1);
      await new Promise(resolve => setTimeout(resolve, 500));
      attempts++;
    }
    
    if (typeof firebase === 'undefined') {
      console.error('‚ùå Firebase SDK –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω –ø–æ—Å–ª–µ 10 –ø–æ–ø—ã—Ç–æ–∫');
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ Firebase SDK');
      return false;
    }
    
    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase
      if (!firebase.apps.length) {
        firebase.initializeApp(this.firebaseConfig);
        console.log('‚úÖ Firebase –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      } else {
        console.log('‚ÑπÔ∏è Firebase —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      }
      
      this.database = firebase.database();
      this.isInitialized = true;
      
      console.log('üî• Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      console.log('üìä Firebase config:', this.firebaseConfig);
      console.log('üåê Database URL:', this.database.ref().toString());
      
      // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –æ–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å–∞
      window.addEventListener('online', () => this.handleOnlineChange(true));
      window.addEventListener('offline', () => this.handleOnlineChange(false));
      
      // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
      document.addEventListener('visibilitychange', () => {
        if (!document.hidden) {
          console.log('üì± –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤–µ—Ä–Ω—É–ª–æ—Å—å –≤ —Ñ–æ–∫—É—Å - –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è');
          this.forcSync();
        }
      });
      
      // –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firebase
      this.startHeartbeat();
      
      // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
      this.setupDataListeners();
      
      // –ü–µ—Ä–≤–∏—á–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
      if (this.isOnline) {
        await this.syncToFirebase();
      }
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ —Å–µ—Ä–≤–µ—Ä—É. –†–∞–±–æ—Ç–∞–µ–º –≤ –ª–æ–∫–∞–ª—å–Ω–æ–º —Ä–µ–∂–∏–º–µ.');
      
      // –í–∫–ª—é—á–∞–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–π —Ä–µ–∂–∏–º –±–µ–∑ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      this.isInitialized = false;
      return false;
    }
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Firebase
  checkFirebaseAvailability() {
    if (typeof firebase === 'undefined') {
      console.log('üîÑ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø—Ä–æ–±—É–µ–º –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø–æ–≤—Ç–æ—Ä–Ω–æ...');
      
      // –ü–æ–ø—ã—Ç–∫–∞ –∑–∞–≥—Ä—É–∑–∏—Ç—å Firebase –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏
      const script1 = document.createElement('script');
      script1.src = 'https://www.gstatic.com/firebasejs/9.22.0/firebase-app-compat.js';
      script1.onload = () => {
        const script2 = document.createElement('script');
        script2.src = 'https://www.gstatic.com/firebasejs/9.22.0/firebase-database-compat.js';
        script2.onload = () => {
          console.log('‚úÖ Firebase –∑–∞–≥—Ä—É–∂–µ–Ω –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏');
          this.init(); // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        };
        document.head.appendChild(script2);
      };
      document.head.appendChild(script1);
      return false;
    }
    return true;
  }

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —É–Ω–∏–∫–∞–ª—å–Ω–æ–≥–æ ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  getUserId() {
    let userId = localStorage.getItem('userId');
    if (!userId) {
      userId = 'user_' + Date.now() + '_' + Math.random().toString(36).substr(2, 9);
      localStorage.setItem('userId', userId);
    }
    return userId;
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ ID —Å–µ–º—å–∏ (–æ–±—â–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö)
  getFamilyId() {
    let familyId = localStorage.getItem('familyId');
    if (!familyId) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤—ã–π ID –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
      familyId = 'family_' + Date.now().toString(36);
      localStorage.setItem('familyId', familyId);
      console.log('üè† –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π Family ID:', familyId);
      this.showSyncStatus('success', `–ù–æ–≤–∞—è —Å–µ–º—å—è: ${familyId}`);
    }
    return familyId;
  }

  // –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª–µ–π –∏–∑–º–µ–Ω–µ–Ω–∏–π
  setupDataListeners() {
    if (!this.isInitialized) return;

    const familyId = this.getFamilyId();
    const familyRef = this.database.ref(`families/${familyId}`);
    
    console.log('üëÇ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è —Å–µ–º—å–∏:', familyId);

    // –°–ª—É—à–∞—Ç–µ–ª—å —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
    familyRef.child('transactions').on('value', (snapshot) => {
      const firebaseTransactions = snapshot.val() || {};
      const timestamp = new Date().toLocaleTimeString();
      console.log(`üì• [${timestamp}] –ü–æ–ª—É—á–µ–Ω—ã —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase:`, Object.keys(firebaseTransactions).length);
      console.log('üîç Firebase data structure:', firebaseTransactions);
      
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
      if (Object.keys(firebaseTransactions).length > 0) {
        this.showSyncStatus('success', `–û–±–Ω–æ–≤–ª–µ–Ω–æ –≤ ${timestamp}`);
      }
      
      this.mergeTransactions(firebaseTransactions);
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–ª–∞–Ω—Å–∞ –ø–æ—Å–ª–µ –∫–∞–∂–¥–æ–≥–æ –∏–∑–º–µ–Ω–µ–Ω–∏—è
      setTimeout(() => {
        if (window.updateDashboard) {
          window.updateDashboard();
          console.log('üí∞ –î–∞—à–±–æ—Ä–¥ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω');
        }
        if (window.calculateBalance) {
          window.calculateBalance();
          console.log('üí∞ –ë–∞–ª–∞–Ω—Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω');
        }
      }, 100);
    }, (error) => {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–ª—É—à–∞—Ç–µ–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
      // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
      setTimeout(() => {
        console.log('üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–ª—É—à–∞—Ç–µ–ª—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
        this.setupDataListeners();
      }, 5000);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å —Ü–µ–ª–µ–π
    familyRef.child('goals').on('value', (snapshot) => {
      const firebaseGoals = snapshot.val() || {};
      console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã —Ü–µ–ª–∏ –∏–∑ Firebase:', Object.keys(firebaseGoals).length);
      this.mergeGoals(firebaseGoals);
    });

    // –°–ª—É—à–∞—Ç–µ–ª—å –∫–∞—Ç–µ–≥–æ—Ä–∏–π
    familyRef.child('categories').on('value', (snapshot) => {
      const firebaseCategories = snapshot.val() || {};
      console.log('üì• –ü–æ–ª—É—á–µ–Ω—ã –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ Firebase:', Object.keys(firebaseCategories).length);
      this.mergeCategories(firebaseCategories);
    });

    console.log('üëÇ –°–ª—É—à–∞—Ç–µ–ª–∏ –¥–∞–Ω–Ω—ã—Ö –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
  }

  // –ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
  startHeartbeat() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    this.heartbeatInterval = setInterval(() => {
      if (this.isInitialized && this.isOnline) {
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Firebase
        const connectedRef = this.database.ref('.info/connected');
        connectedRef.once('value', (snapshot) => {
          if (snapshot.val() === true) {
            console.log('üíì Heartbeat: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ');
          } else {
            console.log('üíî Heartbeat: —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
            this.showSyncStatus('offline', '–ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ...');
            // –ü—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
            setTimeout(() => this.forcSync(), 1000);
          }
        }).catch((error) => {
          console.log('üíî Heartbeat: –æ—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è', error);
          this.showSyncStatus('error', '–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ–º');
        });
      }
    }, 30000); // –ö–∞–∂–¥—ã–µ 30 —Å–µ–∫—É–Ω–¥
    
    console.log('üíì Heartbeat –∑–∞–ø—É—â–µ–Ω (–ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥—ã–µ 30 —Å–µ–∫)');
  }

  // –û—Å—Ç–∞–Ω–æ–≤–∫–∞ heartbeat
  stopHeartbeat() {
    if (this.heartbeatInterval) {
      clearInterval(this.heartbeatInterval);
      this.heartbeatInterval = null;
      console.log('üíî Heartbeat –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
    }
  }

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ç–∏
  handleOnlineChange(isOnline) {
    this.isOnline = isOnline;
    
    if (isOnline) {
      console.log('üåê –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ');
      this.showSyncStatus('syncing', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
      this.syncToFirebase();
    } else {
      console.log('üìµ –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –ø–æ—Ç–µ—Ä—è–Ω–æ');
      this.showSyncStatus('offline', '–û—Ñ–ª–∞–π–Ω —Ä–µ–∂–∏–º');
    }
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö —Å Firebase
  async syncToFirebase() {
    if (!this.checkFirebaseAvailability()) {
      console.log('‚ö†Ô∏è Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      return;
    }
    
    if (!this.isInitialized || !this.isOnline) {
      console.log('‚ö†Ô∏è –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –ø—Ä–æ–ø—É—â–µ–Ω–∞ - –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω –∏–ª–∏ –æ—Ñ–ª–∞–π–Ω');
      console.log('Debug: isInitialized=', this.isInitialized, 'isOnline=', this.isOnline);
      return;
    }

    try {
      const familyId = this.getFamilyId();
      const userId = this.getUserId();
      const timestamp = Date.now();
      
      console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—é...');
      console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Family ID:', familyId);
      console.log('üë§ User ID:', userId);

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      const transactions = JSON.parse(localStorage.getItem('transactions')) || [];
      console.log('üí∞ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –¥–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', transactions.length);
      
      if (transactions.length > 0) {
        const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
        const sendTime = new Date().toLocaleTimeString();
        console.log(`üì§ [${sendTime}] –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Firebase:`, transactionsRef.toString());
        
        let hasNewTransactions = false;
        
        for (const transaction of transactions) {
          try {
            if (!transaction.firebaseId) {
              transaction.firebaseId = transactionsRef.push().key;
              transaction.syncedAt = timestamp;
              transaction.userId = userId;
              hasNewTransactions = true;
              console.log(`‚ûï [${sendTime}] –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è:`, transaction.firebaseId, transaction.amount, transaction.description);
            }
            await transactionsRef.child(transaction.firebaseId).set(transaction);
            console.log(`‚úÖ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞:`, transaction.firebaseId);
          } catch (error) {
            console.error(`‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ ${transaction.id}:`, error);
          }
        }
        
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ —Å firebaseId –≤ localStorage
        if (hasNewTransactions) {
          localStorage.setItem('transactions', JSON.stringify(transactions));
          console.log('üíæ –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã —Å firebaseId');
        }
        
        this.showSyncStatus('success', `–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ ${sendTime}`);
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ü–µ–ª–∏
      const goals = JSON.parse(localStorage.getItem('goals')) || [];
      if (goals.length > 0) {
        const goalsRef = this.database.ref(`families/${familyId}/goals`);
        for (const goal of goals) {
          if (!goal.firebaseId) {
            goal.firebaseId = goalsRef.push().key;
            goal.syncedAt = timestamp;
            goal.userId = userId;
          }
          await goalsRef.child(goal.firebaseId).set(goal);
        }
      }

      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      const categories = JSON.parse(localStorage.getItem('categories')) || [];
      if (categories.length > 0) {
        const categoriesRef = this.database.ref(`families/${familyId}/categories`);
        for (const category of categories) {
          if (!category.firebaseId) {
            category.firebaseId = categoriesRef.push().key;
            category.syncedAt = timestamp;
            category.userId = userId;
          }
          await categoriesRef.child(category.firebaseId).set(category);
        }
      }

      this.lastSyncTime = timestamp;
      localStorage.setItem('lastSyncTime', this.lastSyncTime);
      
      this.showSyncStatus('success', '–°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω–æ');
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã —Å Firebase');

    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  mergeTransactions(firebaseTransactions) {
    const localTransactions = JSON.parse(localStorage.getItem('transactions')) || [];
    const deletedTransactions = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
    
    console.log('üîÑ –ù–∞—á–∏–Ω–∞–µ–º –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π...');
    console.log('üì± –õ–æ–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', localTransactions.length);
    console.log('‚òÅÔ∏è Firebase —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', Object.keys(firebaseTransactions).length);
    console.log('üóëÔ∏è –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', deletedTransactions.length);

    // –ù–∞—á–∏–Ω–∞–µ–º —Å –ª–æ–∫–∞–ª—å–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
    let mergedTransactions = [...localTransactions];

    // –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è–º –∏–∑ Firebase
    Object.values(firebaseTransactions).forEach(firebaseTransaction => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –±—ã–ª–∞ –ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –ª–æ–∫–∞–ª—å–Ω–æ
      const isDeletedByFirebaseId = deletedTransactions.includes(firebaseTransaction.firebaseId);
      const isDeletedById = deletedTransactions.includes(firebaseTransaction.id);
      
      if (isDeletedByFirebaseId || isDeletedById) {
        console.log('üóëÔ∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É–¥–∞–ª–µ–Ω–Ω—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        return; // –ù–µ –¥–æ–±–∞–≤–ª—è–µ–º —É–¥–∞–ª–µ–Ω–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
      }

      const existingIndex = mergedTransactions.findIndex(
        t => t.firebaseId === firebaseTransaction.firebaseId || 
             t.id === firebaseTransaction.id ||
             (t.firebaseId && t.firebaseId === firebaseTransaction.firebaseId)
      );

      if (existingIndex === -1) {
        // –ù–æ–≤–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞
        console.log('‚ûï –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        mergedTransactions.push(firebaseTransaction);
      } else if (firebaseTransaction.syncedAt && firebaseTransaction.syncedAt > (mergedTransactions[existingIndex].syncedAt || 0)) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —Å —Å–µ—Ä–≤–µ—Ä–∞ (–±–æ–ª–µ–µ –Ω–æ–≤–∞—è)
        console.log('üîÑ –û–±–Ω–æ–≤–ª—è–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞:', firebaseTransaction.firebaseId || firebaseTransaction.id);
        mergedTransactions[existingIndex] = firebaseTransaction;
      } else {
        console.log('‚è≠Ô∏è –ü—Ä–æ–ø—É—Å–∫–∞–µ–º —É—Å—Ç–∞—Ä–µ–≤—à—É—é —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é —Å —Å–µ—Ä–≤–µ—Ä–∞:', firebaseTransaction.firebaseId || firebaseTransaction.id);
      }
    });

    console.log('‚úÖ –ò—Ç–æ–≥–æ –ø–æ—Å–ª–µ –æ–±—ä–µ–¥–∏–Ω–µ–Ω–∏—è:', mergedTransactions.length, '—Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π');
    localStorage.setItem('transactions', JSON.stringify(mergedTransactions));
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å
    if (window.renderTransactionHistory) {
      window.renderTransactionHistory();
    }
    if (window.updateDashboard) {
      window.updateDashboard();
    }
    
    // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    if (window.updateBalance) {
      window.updateBalance();
    }
    if (window.calculateBalance) {
      window.calculateBalance();
    }
    
    // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ —Å–æ–±—ã—Ç–∏–µ
    window.dispatchEvent(new Event('transactionsUpdated'));
    
    console.log('üîÑ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω –ø–æ—Å–ª–µ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
  }

  // –£–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase
  async deleteTransactionFromFirebase(transactionId, firebaseId) {
    if (!this.isInitialized || !this.isOnline) {
      console.log('‚ö†Ô∏è –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–ª–æ–∂–µ–Ω–æ - –Ω–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Firebase');
      return;
    }

    try {
      const familyId = this.getFamilyId();
      
      console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º —É–¥–∞–ª–µ–Ω–∏–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', { transactionId, firebaseId });
      
      // –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö –ª–æ–∫–∞–ª—å–Ω–æ
      const deletedTransactions = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
      if (firebaseId && !deletedTransactions.includes(firebaseId)) {
        deletedTransactions.push(firebaseId);
        console.log('üóëÔ∏è –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö (firebaseId):', firebaseId);
      }
      if (transactionId && !deletedTransactions.includes(transactionId)) {
        deletedTransactions.push(transactionId);
        console.log('üóëÔ∏è –î–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö (id):', transactionId);
      }
      localStorage.setItem('deletedTransactions', JSON.stringify(deletedTransactions));
      
      // –£–¥–∞–ª—è–µ–º –∏–∑ Firebase
      if (firebaseId) {
        const transactionRef = this.database.ref(`families/${familyId}/transactions/${firebaseId}`);
        await transactionRef.remove();
        console.log('üî• –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase:', firebaseId);
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç firebaseId, –∏—â–µ–º –ø–æ –¥—Ä—É–≥–∏–º –ø–æ–ª—è–º
      if (!firebaseId && transactionId) {
        const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
        const snapshot = await transactionsRef.once('value');
        const allTransactions = snapshot.val() || {};
        
        // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É ID
        for (const [fbId, transaction] of Object.entries(allTransactions)) {
          if (transaction.id === transactionId) {
            await transactionsRef.child(fbId).remove();
            console.log('üî• –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase –ø–æ ID:', fbId);
            
            // –î–æ–±–∞–≤–ª—è–µ–º –∏ —ç—Ç–æ—Ç firebaseId –≤ —Å–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö
            if (!deletedTransactions.includes(fbId)) {
              deletedTransactions.push(fbId);
              localStorage.setItem('deletedTransactions', JSON.stringify(deletedTransactions));
            }
            break;
          }
        }
      }
      
      // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ –¥–ª—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
      this.showSyncStatus('success', '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
      
      // –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —É–¥–∞–ª–µ–Ω–∏–µ –ø—Ä–æ—à–ª–æ —É—Å–ø–µ—à–Ω–æ
      setTimeout(async () => {
        try {
          const checkRef = this.database.ref(`families/${familyId}/transactions`);
          const checkSnapshot = await checkRef.once('value');
          const remainingTransactions = checkSnapshot.val() || {};
          
          let found = false;
          for (const [fbId, transaction] of Object.entries(remainingTransactions)) {
            if (transaction.id === transactionId || fbId === firebaseId) {
              found = true;
              console.log('‚ö†Ô∏è –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –≤—Å–µ –µ—â–µ –µ—Å—Ç—å –≤ Firebase, –ø—ã—Ç–∞–µ–º—Å—è —É–¥–∞–ª–∏—Ç—å —Å–Ω–æ–≤–∞:', fbId);
              await checkRef.child(fbId).remove();
              break;
            }
          }
          
          if (!found) {
            console.log('‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ: —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase');
          }
        } catch (error) {
          console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —É–¥–∞–ª–µ–Ω–∏—è:', error);
        }
      }, 1000);
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Firebase:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message);
    }
  }
        console.log('ÔøΩ –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase:', firebaseId);
      }
      
      // –ï—Å–ª–∏ –Ω–µ—Ç firebaseId, –∏—â–µ–º –ø–æ –¥—Ä—É–≥–∏–º –ø–æ–ª—è–º
      if (!firebaseId && transactionId) {
        const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
        const snapshot = await transactionsRef.once('value');
        const allTransactions = snapshot.val() || {};
        
        // –ò—â–µ–º —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é –ø–æ –ª–æ–∫–∞–ª—å–Ω–æ–º—É ID
        for (const [fbId, transaction] of Object.entries(allTransactions)) {
          if (transaction.id === transactionId) {
            await transactionsRef.child(fbId).remove();
            console.log('üî• –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è –Ω–∞–π–¥–µ–Ω–∞ –∏ —É–¥–∞–ª–µ–Ω–∞ –∏–∑ Firebase –ø–æ ID:', fbId);
            break;
          }
        }
      }
      
      this.showSyncStatus('success', '–¢—Ä–∞–Ω–∑–∞–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∞');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Firebase:', error);
      this.showSyncStatus('error', '–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è: ' + error.message);
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
  async cleanupDeletedTransactions() {
    const deletedTransactions = JSON.parse(localStorage.getItem('deletedTransactions')) || [];
    if (deletedTransactions.length === 0) return;

    console.log('üßπ –û—á–∏—Å—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', deletedTransactions.length);
    
    try {
      const familyId = this.getFamilyId();
      const transactionsRef = this.database.ref(`families/${familyId}/transactions`);
      
      for (const deletedId of deletedTransactions) {
        try {
          await transactionsRef.child(deletedId).remove();
          console.log('üóëÔ∏è –û—á–∏—â–µ–Ω–∞ –∏–∑ Firebase:', deletedId);
        } catch (error) {
          console.log('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å:', deletedId, error.message);
        }
      }
      
      this.showSyncStatus('success', `–û—á–∏—â–µ–Ω–æ ${deletedTransactions.length} —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π`);
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏:', error);
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ —Ü–µ–ª–µ–π
  mergeGoals(firebaseGoals) {
    const localGoals = JSON.parse(localStorage.getItem('goals')) || [];
    const mergedGoals = [...localGoals];

    Object.values(firebaseGoals).forEach(firebaseGoal => {
      const existingIndex = mergedGoals.findIndex(
        g => g.firebaseId === firebaseGoal.firebaseId || g.id === firebaseGoal.id
      );

      if (existingIndex === -1) {
        mergedGoals.push(firebaseGoal);
      } else if (firebaseGoal.syncedAt > (mergedGoals[existingIndex].syncedAt || 0)) {
        mergedGoals[existingIndex] = firebaseGoal;
      }
    });

    localStorage.setItem('goals', JSON.stringify(mergedGoals));
    
    if (window.renderGoals) {
      window.renderGoals();
    }
  }

  // –û–±—ä–µ–¥–∏–Ω–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π
  mergeCategories(firebaseCategories) {
    const localCategories = JSON.parse(localStorage.getItem('categories')) || [];
    const mergedCategories = [...localCategories];

    Object.values(firebaseCategories).forEach(firebaseCategory => {
      const existingIndex = mergedCategories.findIndex(
        c => c.firebaseId === firebaseCategory.firebaseId || c.id === firebaseCategory.id
      );

      if (existingIndex === -1) {
        mergedCategories.push(firebaseCategory);
      } else if (firebaseCategory.syncedAt > (mergedCategories[existingIndex].syncedAt || 0)) {
        mergedCategories[existingIndex] = firebaseCategory;
      }
    });

    localStorage.setItem('categories', JSON.stringify(mergedCategories));
    
    if (window.renderCategories) {
      window.renderCategories();
    }
  }

  // –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç—É—Å–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
  showSyncStatus(type, message) {
    // –°–æ–∑–¥–∞–µ–º –∏–ª–∏ –æ–±–Ω–æ–≤–ª—è–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    let syncIndicator = document.getElementById('syncIndicator');
    if (!syncIndicator) {
      syncIndicator = document.createElement('div');
      syncIndicator.id = 'syncIndicator';
      syncIndicator.style.cssText = `
        position: fixed;
        top: 20px;
        left: 50%;
        transform: translateX(-50%);
        padding: 8px 12px;
        border-radius: 20px;
        font-size: 12px;
        font-weight: 500;
        z-index: 9999;
        transition: all 0.3s ease;
        display: flex;
        align-items: center;
        gap: 6px;
        cursor: pointer;
        max-width: 250px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
      `;
      document.body.appendChild(syncIndicator);
    }

    let icon, color;
    switch (type) {
      case 'success':
        icon = '‚úÖ';
        color = '#10b981';
        break;
      case 'syncing':
        icon = 'üîÑ';
        color = '#3b82f6';
        break;
      case 'offline':
        icon = 'üìµ';
        color = '#6b7280';
        break;
      case 'error':
        icon = '‚ùå';
        color = '#ef4444';
        break;
      default:
        icon = '‚ÑπÔ∏è';
        color = '#8b5cf6';
    }

    syncIndicator.innerHTML = `
      <span>${icon}</span>
      <span>${message}</span>
      <span style="margin-left: 8px; opacity: 0.6; font-weight: normal; user-select: none;" onclick="this.parentElement.style.display='none'">‚úñ</span>
    `;
    syncIndicator.style.backgroundColor = color;
    syncIndicator.style.color = 'white';

    // –ü–æ–ª–Ω–æ–µ —Å–∫—Ä—ã—Ç–∏–µ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
    if (type === 'success') {
      setTimeout(() => {
        syncIndicator.style.opacity = '0';
        syncIndicator.style.pointerEvents = 'none';
      }, 2000);
      setTimeout(() => {
        syncIndicator.style.display = 'none';
      }, 2500);
    } else {
      syncIndicator.style.opacity = '1';
      syncIndicator.style.pointerEvents = 'auto';
      syncIndicator.style.display = 'flex';
    }
  }

  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  async forcSync() {
    if (!this.isOnline) {
      this.showSyncStatus('offline', '–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
      return;
    }

    this.showSyncStatus('syncing', '–ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
    
    // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –ª–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    await this.syncToFirebase();
    
    // –ó–∞—Ç–µ–º –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–æ–≤–µ—Ä—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
    if (this.isInitialized) {
      try {
        const familyId = this.getFamilyId();
        const familyRef = this.database.ref(`families/${familyId}`);
        
        // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–∞–Ω–Ω—ã–µ
        const transactionsSnapshot = await familyRef.child('transactions').once('value');
        const firebaseTransactions = transactionsSnapshot.val() || {};
        
        console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ - –ø–æ–ª—É—á–µ–Ω–æ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', Object.keys(firebaseTransactions).length);
        this.mergeTransactions(firebaseTransactions);
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏:', error);
        this.showSyncStatus('error', '–û—à–∏–±–∫–∞ –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏');
      }
    }
  }

  // –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π
  reconnectListeners() {
    console.log('üîÑ –ü–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –≤—Å–µ—Ö —Å–ª—É—à–∞—Ç–µ–ª–µ–π...');
    
    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
    if (this.isInitialized) {
      const familyId = this.getFamilyId();
      const familyRef = this.database.ref(`families/${familyId}`);
      familyRef.off(); // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–Ω–æ–≤–æ
    this.setupDataListeners();
    this.showSyncStatus('success', '–°–ª—É—à–∞—Ç–µ–ª–∏ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω—ã');
  }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
window.firebaseSync = null;

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase
window.initFirebaseSync = function() {
  if (!window.firebaseSync) {
    window.firebaseSync = new FirebaseSync();
  }
  return window.firebaseSync;
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –æ—á–µ—Ä–µ–¥—å —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
window.queueForSync = function(data) {
  if (window.firebaseSync) {
    window.firebaseSync.syncToFirebase();
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase
window.deleteTransactionFromFirebase = function(transactionId, firebaseId) {
  if (window.firebaseSync) {
    window.firebaseSync.deleteTransactionFromFirebase(transactionId, firebaseId);
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Ç–µ–∫—É—â–µ–≥–æ Family ID
window.showFamilyId = function() {
  const familyId = localStorage.getItem('familyId') || '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω';
  const deletedCount = JSON.parse(localStorage.getItem('deletedTransactions') || '[]').length;
  const message = `
üè† ID —Å–µ–º—å–∏: ${familyId}
üóëÔ∏è –£–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π: ${deletedCount}
üì± –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: ${navigator.userAgent.includes('Mobile') ? '–ú–æ–±–∏–ª—å–Ω–æ–µ' : '–ö–æ–º–ø—å—é—Ç–µ—Ä'}

‚ö†Ô∏è –î–ª—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ ID —Å–µ–º—å–∏ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º –Ω–∞ –≤—Å–µ—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö!`;
  
  console.log('üë®‚Äçüë©‚Äçüëß‚Äçüë¶ Family ID Info:', {
    familyId,
    deletedCount,
    isMobile: navigator.userAgent.includes('Mobile')
  });
  
  window.firebaseSync?.showSyncStatus('success', `Family ID: ${familyId}`);
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–º–µ–Ω—ã Family ID
window.changeFamilyId = function() {
  if (window.firebaseSync) {
    window.firebaseSync.changeFamilyId();
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π
window.cleanupDeletedTransactions = function() {
  if (window.firebaseSync) {
    window.firebaseSync.cleanupDeletedTransactions();
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–±—Ä–æ—Å–∞ —Å–ø–∏—Å–∫–∞ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
window.resetDeletedTransactions = function() {
  localStorage.removeItem('deletedTransactions');
  console.log('üßπ –°–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ—á–∏—â–µ–Ω');
  window.firebaseSync?.showSyncStatus('success', '–°–ø–∏—Å–æ–∫ —É–¥–∞–ª–µ–Ω–Ω—ã—Ö —Å–±—Ä–æ—à–µ–Ω');
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Firebase
window.reinitializeFirebase = function() {
  if (window.firebaseSync) {
    console.log('üîÑ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase...');
    window.firebaseSync.showSyncStatus('syncing', '–ü–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è...');
    window.firebaseSync.init().then(() => {
      console.log('‚úÖ Firebase –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      window.firebaseSync.showSyncStatus('success', 'Firebase –ø–µ—Ä–µ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    });
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏
window.testSyncSpeed = function() {
  if (!window.firebaseSync || !window.firebaseSync.isInitialized) {
    console.log('‚ùå Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    window.firebaseSync?.showSyncStatus('error', 'Firebase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    return;
  }
  
  const startTime = Date.now();
  console.log('‚è±Ô∏è –¢–µ—Å—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –Ω–∞—á–∞—Ç –≤:', new Date().toLocaleTimeString());
  window.firebaseSync.showSyncStatus('syncing', '–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∫–æ—Ä–æ—Å—Ç–∏...');
  
  // –ü—Ä–æ—Å—Ç–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –±–µ–∑ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const connectedRef = window.firebaseSync.database.ref('.info/connected');
  connectedRef.once('value', (snapshot) => {
    const endTime = Date.now();
    const duration = endTime - startTime;
    const isConnected = snapshot.val();
    
    if (isConnected) {
      console.log(`‚è±Ô∏è –¢–µ—Å—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω –∑–∞ ${duration}ms`);
      window.firebaseSync.showSyncStatus('success', `–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ: ${duration}ms`);
    } else {
      console.log('‚ùå –ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firebase');
      window.firebaseSync.showSyncStatus('error', '–ù–µ—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è');
    }
  }).catch(error => {
    const endTime = Date.now();
    const duration = endTime - startTime;
    console.error('‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', error);
    window.firebaseSync.showSyncStatus('error', `–û—à–∏–±–∫–∞: ${duration}ms`);
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è —Å–ª—É—à–∞—Ç–µ–ª–µ–π
window.reconnectListeners = function() {
  if (window.firebaseSync) {
    window.firebaseSync.reconnectListeners();
  } else {
    console.log('‚ùå Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    window.firebaseSync?.showSyncStatus('error', 'Firebase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
  }
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è
window.checkConnectionStatus = function() {
  if (!window.firebaseSync || !window.firebaseSync.isInitialized) {
    console.log('‚ùå Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    window.firebaseSync?.showSyncStatus('error', 'Firebase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    return;
  }
  
  const connectedRef = window.firebaseSync.database.ref('.info/connected');
  connectedRef.once('value', (snapshot) => {
    const isConnected = snapshot.val();
    const status = isConnected ? '‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–æ' : '‚ùå –û—Ç–∫–ª—é—á–µ–Ω–æ';
    console.log('üîç –°—Ç–∞—Ç—É—Å —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è:', status);
    window.firebaseSync.showSyncStatus(isConnected ? 'success' : 'error', status);
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
window.fullSync = function() {
  if (!window.firebaseSync) {
    console.log('‚ùå Firebase –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    window.firebaseSync?.showSyncStatus('error', 'Firebase –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
    return;
  }
  
  console.log('üîÑ –ó–∞–ø—É—Å–∫ –ø–æ–ª–Ω–æ–π —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏...');
  window.firebaseSync.showSyncStatus('syncing', '–ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è...');
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è
  window.firebaseSync.forcSync().then(() => {
    // –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    setTimeout(() => {
      if (window.updateDashboard) {
        window.updateDashboard();
        console.log('üí∞ –î–∞—à–±–æ—Ä–¥ –æ–±–Ω–æ–≤–ª–µ–Ω');
      }
      if (window.renderTransactionHistory) {
        window.renderTransactionHistory();
        console.log('üìú –ò—Å—Ç–æ—Ä–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
      }
      if (window.calculateBalance) {
        window.calculateBalance();
        console.log('üí∞ –ë–∞–ª–∞–Ω—Å –ø–µ—Ä–µ—Å—á–∏—Ç–∞–Ω');
      }
      if (window.renderGoals) {
        window.renderGoals();
        console.log('üéØ –¶–µ–ª–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
      }
      
      window.firebaseSync.showSyncStatus('success', '–ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
      console.log('‚úÖ –ü–æ–ª–Ω–∞—è —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!');
    }, 500);
  });
};

// –§—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º
window.diagnoseProblem = function() {
  console.log('üîß === –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –ü–†–û–ë–õ–ï–ú ===');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Firebase
  console.log('1. Firebase SDK:', typeof firebase !== 'undefined' ? '‚úÖ –ó–∞–≥—Ä—É–∂–µ–Ω' : '‚ùå –ù–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
  console.log('2. Firebase Sync:', window.firebaseSync ? '‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω' : '‚ùå –ù–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
  
  if (window.firebaseSync) {
    console.log('3. Firebase –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω:', window.firebaseSync.isInitialized ? '‚úÖ –î–∞' : '‚ùå –ù–µ—Ç');
    console.log('4. –û–Ω–ª–∞–π–Ω —Å—Ç–∞—Ç—É—Å:', window.firebaseSync.isOnline ? '‚úÖ –û–Ω–ª–∞–π–Ω' : '‚ùå –û—Ñ–ª–∞–π–Ω');
  }
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ª–æ–∫–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
  const transactions = JSON.parse(localStorage.getItem('transactions') || '[]');
  console.log('5. –õ–æ–∫–∞–ª—å–Ω—ã–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏:', transactions.length);
  console.log('6. Firebase ID —É —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π:', transactions.filter(t => t.firebaseId).length);
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ Family ID
  const familyId = localStorage.getItem('familyId');
  console.log('7. Family ID:', familyId || '–ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  
  // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å Firebase
  if (window.firebaseSync && window.firebaseSync.isInitialized) {
    const connectedRef = window.firebaseSync.database.ref('.info/connected');
    connectedRef.once('value', (snapshot) => {
      console.log('8. –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å Firebase:', snapshot.val() ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–æ' : '‚ùå –ü–æ—Ç–µ—Ä—è–Ω–æ');
    });
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–Ω–Ω—ã—Ö –≤ Firebase
    const familyRef = window.firebaseSync.database.ref(`families/${familyId}/transactions`);
    familyRef.once('value', (snapshot) => {
      const fbTransactions = snapshot.val() || {};
      console.log('9. –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ Firebase:', Object.keys(fbTransactions).length);
      console.log('üìä –°—Ç—Ä—É–∫—Ç—É—Ä–∞ Firebase:', fbTransactions);
    });
  }
  
  console.log('üîß === –ö–û–ù–ï–¶ –î–ò–ê–ì–ù–û–°–¢–ò–ö–ò ===');
  window.firebaseSync?.showSyncStatus('success', '–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ - —Å–º–æ—Ç—Ä–∏—Ç–µ –∫–æ–Ω—Å–æ–ª—å');
};

// –§—É–Ω–∫—Ü–∏—è –ø–æ–ª–Ω–æ–π –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö –¥–∞–Ω–Ω—ã—Ö
window.clearAllData = async function() {
  const confirmed = confirm(`
üóëÔ∏è –ü–û–õ–ù–ê–Ø –û–ß–ò–°–¢–ö–ê –î–ê–ù–ù–´–•

–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ —É–¥–∞–ª–∏—Ç:
‚Ä¢ –í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ (–ª–æ–∫–∞–ª—å–Ω–æ –∏ –≤ Firebase)
‚Ä¢ –í—Å–µ —Ü–µ–ª–∏
‚Ä¢ –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
‚Ä¢ –í—Å–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
‚Ä¢ Family ID –∏ User ID

‚ö†Ô∏è –≠–¢–û –ù–ï–û–ë–†–ê–¢–ò–ú–û!

–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å?`);
  
  if (!confirmed) return;
  
  const doubleConfirm = confirm(`
‚ùå –ü–û–°–õ–ï–î–ù–ï–ï –ü–†–ï–î–£–ü–†–ï–ñ–î–ï–ù–ò–ï!

–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å –í–°–ï –¥–∞–Ω–Ω—ã–µ?
–í–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∏—Ö –±—É–¥–µ—Ç –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ!

–í–≤–µ–¥–∏—Ç–µ "–£–î–ê–õ–ò–¢–¨" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:`);
  
  if (!doubleConfirm) return;
  
  const finalConfirm = prompt('–í–≤–µ–¥–∏—Ç–µ "–£–î–ê–õ–ò–¢–¨" –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è:');
  if (finalConfirm !== '–£–î–ê–õ–ò–¢–¨') {
    alert('–û—á–∏—Å—Ç–∫–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞');
    return;
  }
  
  console.log('üóëÔ∏è –ù–∞—á–∏–Ω–∞–µ–º –ø–æ–ª–Ω—É—é –æ—á–∏—Å—Ç–∫—É –¥–∞–Ω–Ω—ã—Ö...');
  
  // 1. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ —Å–ª—É—à–∞—Ç–µ–ª–∏ Firebase
  if (window.firebaseSync && window.firebaseSync.isInitialized) {
    const familyId = localStorage.getItem('familyId');
    if (familyId) {
      try {
        // –û—Ç–∫–ª—é—á–∞–µ–º –≤—Å–µ —Å–ª—É—à–∞—Ç–µ–ª–∏
        const familyRef = window.firebaseSync.database.ref(`families/${familyId}`);
        familyRef.off();
        
        // –£–¥–∞–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Firebase
        await familyRef.remove();
        console.log('üî• –î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã –∏–∑ Firebase');
        
        // –¢–∞–∫–∂–µ –æ—á–∏—â–∞–µ–º –≤–µ—Å—å —É–∑–µ–ª —Å–µ–º—å–∏ –¥–ª—è –ø–æ–ª–Ω–æ–π –≥–∞—Ä–∞–Ω—Ç–∏–∏
        const rootRef = window.firebaseSync.database.ref(`families`);
        const snapshot = await rootRef.once('value');
        const families = snapshot.val() || {};
        
        // –ï—Å–ª–∏ –µ—Å—Ç—å –¥—Ä—É–≥–∏–µ —Å–µ–º—å–∏ —Å –ø–æ—Ö–æ–∂–∏–º–∏ ID, —Ç–æ–∂–µ —É–¥–∞–ª—è–µ–º (–Ω–∞ —Å–ª—É—á–∞–π –¥—É–±–ª–µ–π)
        for (const [fId, fData] of Object.entries(families)) {
          if (fId.includes(familyId.split('_')[1]) || familyId.includes(fId.split('_')[1])) {
            await rootRef.child(fId).remove();
            console.log('üî• –£–¥–∞–ª–µ–Ω –¥—É–±–ª–∏—Ä—É—é—â–∏–π Family ID:', fId);
          }
        }
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑ Firebase:', error);
      }
    }
  }
  
  // 2. –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ localStorage - —É–¥–∞–ª—è–µ–º –í–°–Å —Å–≤—è–∑–∞–Ω–Ω–æ–µ —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ–º
  const allKeys = Object.keys(localStorage);
  const appKeys = allKeys.filter(key => 
    key.includes('transaction') || 
    key.includes('goal') || 
    key.includes('budget') || 
    key.includes('category') || 
    key.includes('template') || 
    key.includes('recurring') || 
    key.includes('family') || 
    key.includes('user') || 
    key.includes('sync') || 
    key.includes('deleted') ||
    key.includes('setting') ||
    key.includes('backup') ||
    key.includes('notification') ||
    ['transactions', 'goals', 'categories', 'budgets', 'templates', 'recurringTransactions', 'familyId', 'userId', 'lastSyncTime', 'monthlyBudget', 'deletedTransactions', 'lastBackup', 'notificationSettings', 'appSettings'].includes(key)
  );
  
  appKeys.forEach(key => {
    localStorage.removeItem(key);
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω ${key}`);
  });
  
  // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - —É–¥–∞–ª—è–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –∫–ª—é—á–∏
  const standardKeys = [
    'transactions', 'goals', 'categories', 'deletedTransactions', 'familyId', 'userId', 'lastSyncTime', 
    'monthlyBudget', 'recurringTransactions', 'templates', 'lastBackup', 'notificationSettings', 'appSettings',
    'budgets', 'currentUser', 'syncQueue', 'offlineQueue'
  ];
  
  standardKeys.forEach(key => {
    localStorage.removeItem(key);
    console.log(`üóëÔ∏è –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω ${key}`);
  });
  
  // 3. –°–±—Ä–∞—Å—ã–≤–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω—ã (–µ—Å–ª–∏ –µ—Å—Ç—å)
  if (typeof transactions !== 'undefined') window.transactions = [];
  if (typeof goals !== 'undefined') window.goals = [];
  if (typeof categories !== 'undefined') window.categories = [];
  
  // 4. –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º Firebase Sync
  if (window.firebaseSync) {
    window.firebaseSync.stopHeartbeat();
    window.firebaseSync = null;
  }
  
  console.log('‚úÖ –ü–æ–ª–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  
  alert(`
‚úÖ –í–°–ï –î–ê–ù–ù–´–ï –£–î–ê–õ–ï–ù–´!

‚Ä¢ –õ–æ–∫–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: –æ—á–∏—â–µ–Ω—ã
‚Ä¢ Firebase –¥–∞–Ω–Ω—ã–µ: —É–¥–∞–ª–µ–Ω—ã  
‚Ä¢ –ù–∞—Å—Ç—Ä–æ–π–∫–∏: —Å–±—Ä–æ—à–µ–Ω—ã

–°—Ç—Ä–∞–Ω–∏—Ü–∞ –±—É–¥–µ—Ç –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–µ–Ω–∞ –¥–ª—è –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π.`);
  
  // –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —Å–±—Ä–æ—Å–∞
  setTimeout(() => {
    window.location.reload();
  }, 2000);
};

// –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —É–¥–∞–ª–µ–Ω–∏—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –∏–∑ Firebase
window.deleteTransactionFromFirebaseFixed = function(transactionId, firebaseId) {
  if (window.firebaseSync && window.firebaseSync.isInitialized && window.firebaseSync.isOnline) {
    window.firebaseSync.deleteTransactionFromFirebase(transactionId, firebaseId);
  }
};