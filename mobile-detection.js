// === –ü–†–û–°–¢–ê–Ø –ú–û–ë–ò–õ–¨–ù–ê–Ø –î–ï–¢–ï–ö–¶–ò–Ø ===

function isMobileDevice() {
  // –ü—Ä–æ—Å—Ç–∞—è –∏ –Ω–∞–¥–µ–∂–Ω–∞—è –¥–µ—Ç–µ–∫—Ü–∏—è –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤
  const userAgent = navigator.userAgent || '';
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º User Agent –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã
  const isMobileUA = /android|iphone|ipad|ipod|blackberry|iemobile|opera mini|mobile/i.test(userAgent) ||
                     /xiaomi|poco|miui|samsung|huawei|oppo|vivo|oneplus/i.test(userAgent);
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞—á-–ø–æ–¥–¥–µ—Ä–∂–∫—É
  const hasTouch = 'ontouchstart' in window || navigator.maxTouchPoints > 0;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —ç–∫—Ä–∞–Ω–∞
  const isNarrowScreen = window.innerWidth <= 1200 || window.screen.width <= 1200;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ —Å—Ç–æ—Ä–æ–Ω (–º–æ–±–∏–ª—å–Ω—ã–µ –æ–±—ã—á–Ω–æ –≤—ã—Å–æ–∫–∏–µ)
  const aspectRatio = Math.max(window.screen.width, window.screen.height) / 
                     Math.min(window.screen.width, window.screen.height);
  const isMobileAspectRatio = aspectRatio > 1.3;
  
  // –ö–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –ª–æ–≥–∏–∫–∞
  const isMobile = isMobileUA || 
                   (hasTouch && isNarrowScreen) ||
                   (hasTouch && isMobileAspectRatio);

  console.log('üì± –î–µ—Ç–µ–∫—Ü–∏—è –º–æ–±–∏–ª—å–Ω–æ–≥–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:', {
    userAgent: userAgent.substring(0, 100) + '...',
    isMobileUA: isMobileUA,
    hasTouch: hasTouch,
    screenWidth: window.screen.width,
    viewportWidth: window.innerWidth,
    isNarrowScreen: isNarrowScreen,
    aspectRatio: aspectRatio.toFixed(2),
    isMobileAspectRatio: isMobileAspectRatio,
    finalResult: isMobile
  });

  return isMobile;
}

// –ü—Ä–∏–º–µ–Ω—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ –∫–ª–∞—Å—Å—ã –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
if (isMobileDevice()) {
  document.documentElement.classList.add('mobile-device');
  document.body.classList.add('mobile-device', 'force-mobile');
  
  // –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø—Ä–∏–º–µ–Ω—è–µ–º –º–æ–±–∏–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏
  const forceMobileStyles = () => {
    console.log('üîß –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ –º–æ–±–∏–ª—å–Ω—ã—Ö —Å—Ç–∏–ª–µ–π');
    
    // –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã
    const containers = document.querySelectorAll('.container');
    containers.forEach(c => {
      c.style.setProperty('max-width', '100%', 'important');
      c.style.setProperty('padding', '15px', 'important');
    });
    
    // –°–µ—Ç–∫–∏
    const grids = document.querySelectorAll('.stats-grid, .panel-grid');
    grids.forEach(g => {
      g.style.setProperty('grid-template-columns', '1fr', 'important');
      g.style.setProperty('gap', '15px', 'important');
    });
    
    // –≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º
    const inputs = document.querySelectorAll('input, select, textarea');
    inputs.forEach(input => {
      input.style.setProperty('padding', '16px', 'important');
      input.style.setProperty('font-size', '16px', 'important');
      input.style.setProperty('min-height', '48px', 'important');
    });
    
    // –ö–Ω–æ–ø–∫–∏
    const buttons = document.querySelectorAll('.btn, button');
    buttons.forEach(btn => {
      btn.style.setProperty('padding', '16px 24px', 'important');
      btn.style.setProperty('font-size', '16px', 'important');
      btn.style.setProperty('min-height', '48px', 'important');
    });
  };
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏ —Å—Ä–∞–∑—É –∏ –ø–æ—Å–ª–µ –∑–∞–≥—Ä—É–∑–∫–∏
  forceMobileStyles();
  document.addEventListener('DOMContentLoaded', forceMobileStyles);
  
  console.log('üì± –ú–æ–±–∏–ª—å–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –∏ —Å—Ç–∏–ª–∏ –ø—Ä–∏–º–µ–Ω–µ–Ω—ã');
} else {
  document.documentElement.classList.add('desktop-device');
  console.log('üñ•Ô∏è –î–µ—Å–∫—Ç–æ–ø–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ');
}

// –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
function diagnosticInfo() {
  const info = {
    userAgent: navigator.userAgent,
    screenWidth: window.screen.width,
    screenHeight: window.screen.height,
    viewportWidth: window.innerWidth,
    viewportHeight: window.innerHeight,
    devicePixelRatio: window.devicePixelRatio,
    touchSupport: 'ontouchstart' in window,
    maxTouchPoints: navigator.maxTouchPoints,
    documentClasses: document.documentElement.className,
    bodyClasses: document.body?.className || 'body not ready',
    isMobileDetected: document.documentElement.classList.contains('mobile-device')
  };
  
  console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –£–°–¢–†–û–ô–°–¢–í–ê:', info);
  
  // –°–æ–∑–¥–∞—ë–º –≤–∏–∑—É–∞–ª—å–Ω—É—é –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫—É –Ω–∞ —ç–∫—Ä–∞–Ω–µ
  const panel = document.createElement('div');
  panel.style.cssText = `
    position: fixed;
    top: 10px;
    left: 10px;
    right: 10px;
    background: #000;
    color: #0f0;
    padding: 15px;
    border-radius: 8px;
    font-family: monospace;
    font-size: 12px;
    z-index: 10000;
    border: 2px solid #0f0;
  `;
  
  panel.innerHTML = `
    <div style="text-align: center; margin-bottom: 10px;">
      <strong>üì± –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê POCO</strong>
      <button onclick="this.parentElement.parentElement.remove()" 
              style="float: right; background: #f00; color: white; border: none; padding: 5px; border-radius: 3px;">‚úï</button>
    </div>
    <div><strong>–°—Ç–∞—Ç—É—Å:</strong> ${info.isMobileDetected ? '‚úÖ –ú–û–ë–ò–õ–¨–ù–û–ï' : '‚ùå –î–ï–°–ö–¢–û–ü–ù–û–ï'}</div>
    <div><strong>–†–∞–∑–º–µ—Ä—ã:</strong> ${info.screenWidth}x${info.screenHeight} (—ç–∫—Ä–∞–Ω), ${info.viewportWidth}x${info.viewportHeight} (viewport)</div>
    <div><strong>Touch:</strong> ${info.touchSupport ? '‚úÖ' : '‚ùå'} (${info.maxTouchPoints} —Ç–æ—á–µ–∫)</div>
    <div><strong>User Agent:</strong> ${info.userAgent.substring(0, 50)}...</div>
    <div><strong>CSS –∫–ª–∞—Å—Å—ã:</strong> ${info.documentClasses}</div>
    <div style="margin-top: 10px;">
      <button onclick="forceMobileMode()" style="background: #0a0; color: white; border: none; padding: 8px; border-radius: 4px; width: 100%;">
        üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ú–û–ë–ò–õ–ò–ó–ê–¶–ò–Ø
      </button>
    </div>
  `;
  
  document.body.appendChild(panel);
  
  return info;
}

// –§—É–Ω–∫—Ü–∏—è –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –º–æ–±–∏–ª–∏–∑–∞—Ü–∏–∏
function forceMobileMode() {
  console.log('üîß –ü–†–ò–ù–£–î–ò–¢–ï–õ–¨–ù–ê–Ø –ú–û–ë–ò–õ–ò–ó–ê–¶–ò–Ø');
  
  document.documentElement.classList.add('mobile-device');
  document.body.classList.add('mobile-device', 'force-mobile');
  
  // –ü—Ä–∏–º–µ–Ω—è–µ–º —Å—Ç–∏–ª–∏
  const containers = document.querySelectorAll('.container');
  containers.forEach(c => {
    c.style.setProperty('max-width', '100%', 'important');
    c.style.setProperty('padding', '15px', 'important');
  });
  
  const grids = document.querySelectorAll('.stats-grid, .panel-grid');
  grids.forEach(g => {
    g.style.setProperty('grid-template-columns', '1fr', 'important');
  });
  
  alert('‚úÖ –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–∞—è –º–æ–±–∏–ª–∏–∑–∞—Ü–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∞!');
}